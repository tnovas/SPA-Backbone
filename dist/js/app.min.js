/*! 
* Web - v1.0.0
* Copyright (c) 2014 Tomas Novas 
*  
*/ 

(function (modules) {
	'use strict';

	var resolve, getRequire, wmRequire, notFoundError, findFile
	  , extensions = {".js":[],".json":[],".css":[],".html":[]}
	  , envRequire = typeof require === 'undefined' ? null : require;

	notFoundError = function (path) {
		var error = new Error("Could not find module '" + path + "'");
		error.code = 'MODULE_NOT_FOUND';
		return error;
	};
	findFile = function (scope, name, extName) {
		var i, ext;
		if (typeof scope[name + extName] === 'function') return name + extName;
		for (i = 0; (ext = extensions[extName][i]); ++i) {
			if (typeof scope[name + ext] === 'function') return name + ext;
		}
		return null;
	};
	resolve = function (scope, tree, path, fullPath, state, id) {
		var name, dir, exports, module, fn, found, i, ext;
		path = path.split(/[\\/]/);
		name = path.pop();
		if ((name === '.') || (name === '..')) {
			path.push(name);
			name = '';
		}
		while ((dir = path.shift()) != null) {
			if (!dir || (dir === '.')) continue;
			if (dir === '..') {
				scope = tree.pop();
				id = id.slice(0, id.lastIndexOf('/'));
			} else {
				tree.push(scope);
				scope = scope[dir];
				id += '/' + dir;
			}
			if (!scope) throw notFoundError(fullPath);
		}
		if (name && (typeof scope[name] !== 'function')) {
			found = findFile(scope, name, '.js');
			if (!found) found = findFile(scope, name, '.json');
			if (!found) found = findFile(scope, name, '.css');
			if (!found) found = findFile(scope, name, '.html');
			if (found) {
				name = found;
			} else if ((state !== 2) && (typeof scope[name] === 'object')) {
				tree.push(scope);
				scope = scope[name];
				id += '/' + name;
				name = '';
			}
		}
		if (!name) {
			if ((state !== 1) && scope[':mainpath:']) {
				return resolve(scope, tree, scope[':mainpath:'], fullPath, 1, id);
			}
			return resolve(scope, tree, 'index', fullPath, 2, id);
		}
		fn = scope[name];
		if (!fn) throw notFoundError(fullPath);
		if (fn.hasOwnProperty('module')) return fn.module.exports;
		exports = {};
		fn.module = module = { exports: exports, id: id + '/' + name };
		fn.call(exports, exports, module, getRequire(scope, tree, id));
		return module.exports;
	};
	wmRequire = function (scope, tree, fullPath, id) {
		var name, path = fullPath, t = fullPath.charAt(0), state = 0;
		if (t === '/') {
			path = path.slice(1);
			scope = modules['/'];
			if (!scope) {
				if (envRequire) return envRequire(fullPath);
				throw notFoundError(fullPath);
			}
			id = '/';
			tree = [];
		} else if (t !== '.') {
			name = path.split('/', 1)[0];
			scope = modules[name];
			if (!scope) {
				if (envRequire) return envRequire(fullPath);
				throw notFoundError(fullPath);
			}
			id = name;
			tree = [];
			path = path.slice(name.length + 1);
			if (!path) {
				path = scope[':mainpath:'];
				if (path) {
					state = 1;
				} else {
					path = 'index';
					state = 2;
				}
			}
		}
		return resolve(scope, tree, path, fullPath, state, id);
	};
	getRequire = function (scope, tree, id) {
		return function (path) {
			return wmRequire(scope, [].concat(tree), path, id);
		};
	};
	return getRequire(modules, [], '');
})({
	"webTech": {
		"app": {
			"Initializer.js": function (exports, module, require) {
				
				module.exports = function(){
				  require('./app').start();
				};
			},
			"app.js": function (exports, module, require) {
				var LayoutView = require('./views/layout/LayoutView'),
					Routers = require('./routers/RouterApp');
				
				var app = module.exports = new Backbone.Marionette.Application();
				
				app.addInitializer(function(){
				
					app.addRegions({
						container: 'body'
					});
				
					app.setLang = require('./helpers/language/lang');
				
					app.layout = new LayoutView({
						language: app.setLang
					});
				
					app.container.show(app.layout);
				
					app.router = new Routers({
						app: app
					});
				
					Backbone.history.start();
				
					Backbone.history.on("all", function () {
						var ulNavBar = $('ul[class="nav navbar-nav"] li');
						var routeName = Backbone.history.fragment;
				    	var active = ulNavBar.find('[href="#/' + routeName + '"]').parent();
						var noActive = ulNavBar.not(active);
						active.addClass('active');
						noActive.removeClass('active');
				
						$('.panel-title').text(routeName.charAt(0).toUpperCase() + routeName.slice(1));
					});
				});
			},
			"controllers": {
				"home": {
					"home.js": function (exports, module, require) {
						var Home = require('../../models/home/home');
						
						module.exports = function(callback){
							Backbone.ajax({
							    dataType: "json",
							    url: "api/home",
							    async: true,
							    success: function(data){	    	
						    		callback(new Home(data));	
							    }
							});
						}; 
					}
				},
				"login": {
					"login.js": function (exports, module, require) {
						module.exports = function(data, callback){
							Backbone.ajax({
							    dataType: "json",
							    url: "api/login",
							    data: data,
							    async: true,
							    success: function(data){	    	
						    		callback(data);
							    }
							});
						}; 
					}
				},
				"products": {
					"products.js": function (exports, module, require) {
						var Products = require('../../models/products/product');
						
						module.exports = function(callback){
							Backbone.ajax({
							    dataType: "json",
							    url: "api/products",
							    async: true,
							    success: function(data){
							        callback(new Products(data));
							    }
							});
						}; 
					}
				}
			},
			"helpers": {
				"language": {
					"lang.js": function (exports, module, require) {
						var es, en;
						
						function loadAbjson(json){
							window.abjson.load({ 
								source : json
								}, function(){
									$('body').abjson();				
							});
						}
						
						module.exports = function(lang){
							if (lang === 'es') {
								loadAbjson(es);
							} else {
								loadAbjson(en);
							}
						};
						
						$.getJSON( "locales/es/translation.json", function( data ) {
						    es = data;
						    loadAbjson(es);
						 });
						
						$.getJSON( "locales/en/translation.json", function( data ) {
						    en = data;
						 });
					}
				}
			},
			"initDev.js": function (exports, module, require) {
				
				$(function() {
				  require('./Initializer')({
				    enviroment: 'development'
				  });
				
				});
			},
			"models": {
				"User": {
					"User.js": function (exports, module, require) {
						module.exports = Backbone.Model.extend({
							defaults: {
								id: '',
								mail: '',
								nombre: ''
							}
						});
					}
				},
				"home": {
					"home.js": function (exports, module, require) {
						module.exports = Backbone.Model.extend({
							defaults : {
								description: ''
							}
						});
					}
				},
				"products": {
					"product.js": function (exports, module, require) {
						var product = Backbone.Model.extend({
							defaults: {
								title: '',
								description: '',
								image: ''
							}
						});
						
						module.exports = Backbone.Collection.extend({
							model: product
						});
					}
				}
			},
			"routers": {
				"RouterApp.js": function (exports, module, require) {
					module.exports = Backbone.Router.extend({
						routes: {
							'': 'home',
							'inicio': 'home',
							'productos': 'products',
							'contacto': 'contact',
							'admin': 'admin',
							'login': 'login'
						},
					
						initialize: function(options) {
							this.app = options.app;
						},
					
						home: function() {
							this.app.layout.showHome();
						},
					
						products: function() {
							this.app.layout.showProducts();
						},
					
						contact: function() {
							this.app.layout.showContact();
						},
					
						admin: function(){
							this.app.layout.showAdmin();
						},
					
						login: function(){
							this.app.layout.showLogin();
						}
					});
				}
			},
			"views": {
				"Contact": {
					"ContactView.js": function (exports, module, require) {
						var ContactTemplate = require('../templates/Contact/Contact');
						
						module.exports = Backbone.Marionette.ItemView.extend({
							template: ContactTemplate,
							title: 'index.contact',
						});
					}
				},
				"Login": {
					"LoginView.js": function (exports, module, require) {
						var LoginTemplate = require('../Templates/Login/Login'),
						    UserModel = require('../../models/User/User');
						    
						var loginView;
						
						module.exports = Backbone.Marionette.ItemView.extend({
							template: LoginTemplate,
						    title: 'index.admin',
						
							ui: {
						    	email: 'input[type=text]',
						    	password: 'input[type=password]',
						  	},
						
							events: {
						        "click button": "login"
						    },
						
						    login: function(){
						        loginView = this;
						        var login = {
						            email: this.ui.email.val(),
						            password: this.ui.password.val()
						        };
						
						        require('../../controllers/login/login')(login, this.setUser);    	
						    },
						
						    setUser: function(data){
						        loginView.layout(new UserModel(data));
						    }
						});
					}
				},
				"Templates": {
					"Login": {
						"Login.js": function (exports, module, require) {
							module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
							  this.compilerInfo = [4,'>= 1.0.0'];
							helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
							  


							  return "<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-6 col-md-4 col-md-offset-4\">\r\n            <div class=\"account-wall\">\r\n                <img class=\"profile-img\" src=\"https://lh5.googleusercontent.com/-b0-k99FZlyE/AAAAAAAAAAI/AAAAAAAAAAA/eu7opA4byxI/photo.jpg?sz=120\"\r\n                    alt=\"\">\r\n                <div class=\"form-signin\">\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Email\" required autofocus>\r\n                    <input type=\"password\" class=\"form-control\" placeholder=\"Password\" required>\r\n                    <button class=\"btn btn-lg btn-primary btn-block\">Ingresar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>";
							  })
							;
						}
					}
				},
				"home": {
					"HomeView.js": function (exports, module, require) {
						var HomeTemplate = require('../templates/home/home');
						
						var home;
						
						module.exports = Backbone.Marionette.ItemView.extend({
							tagName: 'p',
							template: HomeTemplate,
							title: 'index.home',
						
							initialize: function(){
								home = this;
								require('../../controllers/home/home')(this.setHome);
							},
						
							setHome: function(data){
								home.model = data;
								home.render();	
							}
						});
					}
				},
				"layout": {
					"LayoutView.js": function (exports, module, require) {
						var ProductsView = require('../products/ProductsView'),
							HomeView = require('../home/HomeView'),
							ContactView = require('../Contact/ContactView'),
							LoginView = require('../Login/LoginView');
						
						var layoutView;
						
						module.exports = Backbone.Marionette.LayoutView.extend({
							id: 'main-layout',
						
							template: require('../templates/layout/mainLayout'),
						
							regions: {
								banner: "header[role=banner]",
								mainContent: ".panel-body",
								footer: "footer[role=contentinfo]"
							},
						
							ui: {
								cultureDropBox: 'ul[role=menu] li',
								title: 'h3[class=panel-title]'
							},
						
							events: {
						    	'click @ui.cultureDropBox': 'changeCulture'
						  	},
						
						  	initialize: function(options) {
						  		layoutView = this;
								this.setLang = options.language;
							},
						
							changeCulture: function(data){
						  		var element = $(data.target);
						  		this.ui.cultureDropBox.removeClass('active');
						  		element.parent().addClass('active');
						  		this.setLang(element.attr('culture'));
						  	},
						
							showHome: function(){
								var home = new HomeView();
								this.changeTitle(home.title);
								this.mainContent.show(home);
							},
						
							showProducts: function(){
								var products = new ProductsView();
								this.changeTitle(products.title);
								this.mainContent.show(products);
							},
						
							showContact: function(){
								var contacts = new ContactView();
								this.changeTitle(contacts.title);
								this.mainContent.show(contacts);
							},
						
							showAdmin: function(login){
								layoutView.model = login;
								console.log('Login :)');
							},
						
							showLogin: function(){
								var login = new LoginView();
								login.layout = this.showAdmin;
								this.changeTitle(login.title);
								this.mainContent.show(login);
							},
						
							changeTitle: function(title){
								this.ui.title.attr('data-abjson', title);
							}
						});
					}
				},
				"products": {
					"ProductsView.js": function (exports, module, require) {
						var ProductTemplate = require('../templates/products/Product'),
						  ProductsTemplate = require('../templates/products/Products');
						
						var productsCollection;
						
						var view = Backbone.Marionette.ItemView.extend({
							template: ProductTemplate,
							className: 'col-md-4'
						});
						
						module.exports = Backbone.Marionette.CompositeView.extend({
							template: ProductsTemplate,
							childViewContainer: "div.row.productos",
							childView: view,
							title: 'index.products',
						
							ui: {
								searchText: 'div[role=search] input'
							},
						
							events: {
						    	'keyup @ui.searchText': 'filterCollection'
						  	},
						
							initialize: function(){
								productsCollection = this;
								require('../../controllers/products/products')(this.setCollection);
							},
						
							setCollection: function(data){
								productsCollection.collection = data;
								productsCollection.collectionFilter = data.clone();
								productsCollection.render();
							},
						
							filterCollection: function(){
								var textFilter = this.ui.searchText.val();
								if (textFilter === ''){
									this.collection = this.collectionFilter.clone();
								}
								else{
									var filter = this.collectionFilter.filter(function(model) {
										return model.get('title').toLowerCase().indexOf(textFilter.toLowerCase()) !== -1; 
									});
						
									this.collection.remove(filter);
								}
							}
						});
					}
				},
				"templates": {
					"Contact": {
						"Contact.js": function (exports, module, require) {
							module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
							  this.compilerInfo = [4,'>= 1.0.0'];
							helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
							  


							  return "<form role=\"form\">\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">Nombre</label>\r\n    <input class=\"form-control\" id=\"name\" placeholder=\"Ingrese su nombre\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"email\">Email</label>\r\n    <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Ingrese su email\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"consult\">Consulta</label>\r\n    <textarea class=\"form-control\" rows=\"3\" id=\"consult\" placeholder=\"Ingrese su consulta\"></textarea>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-default\">Enviar</button>\r\n</form>";
							  })
							;
						}
					},
					"home": {
						"home.js": function (exports, module, require) {
							module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
							  this.compilerInfo = [4,'>= 1.0.0'];
							helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
							  var stack1, functionType="function", escapeExpression=this.escapeExpression;


							  if (stack1 = helpers.description) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
							  else { stack1 = depth0.description; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
							  return escapeExpression(stack1);
							  })
							;
						}
					},
					"layout": {
						"mainLayout.js": function (exports, module, require) {
							module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
							  this.compilerInfo = [4,'>= 1.0.0'];
							helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
							  


							  return "<header role=\"banner\">\r\n	<nav class=\"navbar navbar-inverse\" role=\"navigation\">\r\n	    <div class=\"navbar-header\">\r\n	      <button type=\"button\" class=\"navbar-toggle\">\r\n	        <span class=\"sr-only\">Toggle navigation</span>\r\n	        <span class=\"icon-bar\"></span>\r\n	        <span class=\"icon-bar\"></span>\r\n	        <span class=\"icon-bar\"></span>\r\n	      </button>\r\n	      <a class=\"navbar-brand\" href=\"#\">CityAgro</a>\r\n	    </div>\r\n	    <div class=\"collapse navbar-collapse\">\r\n	      <ul class=\"nav navbar-nav\">\r\n	      	<li class=\"active\"><a href=\"#/inicio\" data-abjson=\"index.home\"></a></li>\r\n	      	<li><a href=\"#/productos\" data-abjson=\"index.products\"></a></li>\r\n	        <li><a href=\"#/contacto\" data-abjson=\"index.contact\"></a></li>\r\n	      </ul>\r\n       		 <ul class=\"nav navbar-nav navbar-right\">\r\n		        <li class=\"dropdown\">\r\n		          <a class=\"dropdown-toggle\" data-toggle=\"dropdown\">Language<span class=\"caret\"></span></a>\r\n		          <ul class=\"dropdown-menu\" role=\"menu\">\r\n		            <li class=\"active\"><a culture=\"es\"  data-abjson=\"index.spanish\"></a></li>\r\n		            <li><a culture=\"en\"  data-abjson=\"index.english\"></a></li>\r\n		          </ul>\r\n		        </li>\r\n		      </ul>\r\n	    </div>\r\n	</nav>\r\n</header>\r\n<section role=\"main-content\">\r\n	<div class=\"panel panel-default\">\r\n	  <div class=\"panel-heading\">\r\n	    <h3 class=\"panel-title\"></h3>\r\n	  </div>\r\n	  <div class=\"panel-body\"></div>\r\n	</div>	\r\n</section>\r\n<footer role=\"contentinfo\">\r\n	<nav class=\"navbar navbar-inverse\" role=\"navigation\">\r\n	    <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n			<ul class=\"nav navbar-nav navbar-right\">\r\n		      	<li><p class=\"navbar-text\">Copyright 2014</p></li>\r\n	    	</ul>\r\n	    </div>\r\n	</nav>\r\n</footer>";
							  })
							;
						}
					},
					"products": {
						"Product.js": function (exports, module, require) {
							module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
							  this.compilerInfo = [4,'>= 1.0.0'];
							helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
							  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


							  buffer += "<div class=\"thumbnail\">   \r\n	<img src=";
							  if (stack1 = helpers.image) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
							  else { stack1 = depth0.image; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
							  buffer += escapeExpression(stack1)
							    + " alt=\"";
							  if (stack1 = helpers.title) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
							  else { stack1 = depth0.title; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
							  buffer += escapeExpression(stack1)
							    + "\">\r\n	<div class=\"caption\">\r\n		<h3>";
							  if (stack1 = helpers.title) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
							  else { stack1 = depth0.title; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
							  buffer += escapeExpression(stack1)
							    + "</h3>\r\n		<p>";
							  if (stack1 = helpers.description) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
							  else { stack1 = depth0.description; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
							  buffer += escapeExpression(stack1)
							    + "</p>\r\n	</div>\r\n</div>";
							  return buffer;
							  })
							;
						},
						"Products.js": function (exports, module, require) {
							module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
							  this.compilerInfo = [4,'>= 1.0.0'];
							helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
							  


							  return "<div class=\"row\">\r\n	<div class=\"col-md-2\">\r\n    	<h4 class=\"list-group-item-heading\">Filtrar Productos</h4>\r\n		<div class=\"form-group\" role=\"search\">\r\n			<input type=\"text\" class=\"form-control\" placeholder=\"Buscar\">\r\n		</div>\r\n	</div>\r\n	<div class=\"col-md-10\">\r\n		<div class=\"row productos\"></div>		\r\n	</div>\r\n</div>";
							  })
							;
						}
					}
				}
			}
		}
	}
})("webTech/app/initDev");
